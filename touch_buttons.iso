#include <stdint.h>
#include <SeeedTouchScreen.h> 
#include <TFTv2.h>
#include <SPI.h>
#include <Adafruit_GFX.h>    // Core graphics library


#define YP A2   // must be an analog pin, use "An" notation!
#define XM A1   // must be an analog pin, use "An" notation!
#define YM 14   // can be a digital pin, this is A0
#define XP 17   // can be a digital pin, this is A3 

//Measured ADC values for (0,0) and (210-1,320-1)
//TS_MINX corresponds to ADC value when X = 0
//TS_MINY corresponds to ADC value when Y = 0
//TS_MAXX corresponds to ADC value when X = 240 -1
//TS_MAXY corresponds to ADC value when Y = 320 -1

#define TS_MINX 116*2
#define TS_MAXX 890*2
#define TS_MINY 83*2
#define TS_MAXY 913*2

int buttonOneState;
int lastButtonOneState;

// For better pressure precision, we need to know the resistance
// between X+ and X- Use any multimeter to read it
// The 2.8" TFT Touch shield has 300 ohms across the X plate
TouchScreen ts = TouchScreen(XP, YP, XM, YM);

void setup(void) {
  Serial.begin(9600);
  TFT_BL_OFF;
  Tft.TFTinit();
  Tft.drawString("B1",50,5,2,WHITE);
  Tft.fillRectangle(20, 25, 80,80, GREEN);
  Tft.drawString("OFF",30,50,3,WHITE);
}

void loop(void) {
  // a point object holds x y and z coordinates
;
  Point p = ts.getPoint();
   
  p.x = map(p.x, TS_MINX, TS_MAXX, 0, 240);
  p.y = map(p.y, TS_MINY, TS_MAXY, 0, 320);

  // we have some minimum pressure we consider 'valid'
  // pressure of 0 means no pressing!
  if (p.z > 200) {

      Serial.print("X = "); Serial.print(p.x);
      Serial.print("\tY = "); Serial.print(p.y);
      Serial.print("\tPressure = "); Serial.println(p.z);
      Serial.println(buttonOneState);
        if (25<=p.x && p.x<=105 && 20<=p.y && p.y<=100) {
        if (buttonOneState == 1) {
            Tft.fillRectangle(20, 25, 80, 80, RED);
            Tft.drawString("ON",40,50,3,WHITE);
            Serial.println(buttonOneState);
            buttonOneState = 0;
            delay(100);
          }
        else { 
           Tft.fillRectangle(20, 25, 80,80, GREEN);
           Tft.drawString("OFF",30,50,3,WHITE);
           buttonOneState = 1;
           delay(100);

          }
        }

      }
  
  delay(100);
}
